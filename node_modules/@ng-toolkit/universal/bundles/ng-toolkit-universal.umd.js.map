{"version":3,"file":"ng-toolkit-universal.umd.js.map","sources":["ng://@ng-toolkit/universal/ngt-universal/window.service.ts","ng://@ng-toolkit/universal/ngt-universal/local-storage-wrapper.service.ts","ng://@ng-toolkit/universal/ngt-universal/document.service.ts","ng://@ng-toolkit/universal/ngt-universal/ngt-universal.module.ts"],"sourcesContent":["import { Injectable, Inject, PLATFORM_ID, InjectionToken } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class WindowService {\n    private _window: Window;\n    constructor(@Inject(PLATFORM_ID) platformId: any) {\n        if (!isPlatformBrowser(platformId)) {\n            // const req: any = this.injector.get(this.injector.get(USERAGENTTOKEN));\n            // this._window = {navigator: {userAgent: req.get('User-Agent')}};\n            this._window = {navigator: {userAgent: 'fakeAgent'}} as Window;\n        } else {\n            this._window = window;\n        }\n    }\n\n    get nativeWindow(): any {\n        return this._window;\n    }\n}\n","import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class LocalStorageWrapper {\n    private localStorageRef;\n\n    constructor(@Inject(PLATFORM_ID) platformId) {\n        if (isPlatformBrowser(platformId)) {\n            this.localStorageRef = localStorage;\n        } else {\n            this.localStorageRef = {\n            clear: () => {/*noop*/},\n            getItem: (key: string) => undefined as string,\n            key: (index: number) => undefined as string,\n            removeItem: (key: string) => {/*noop*/},\n            setItem: (key: string, value: string) => {/*noop*/},\n            length: 0\n            };\n        }\n    }\n\n    get localStorage() {\n        return this.localStorageRef;\n    }\n}\n","import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class DocumentService {\n    private _document: Document;\n    constructor(@Inject(PLATFORM_ID) platformId: any) {\n        if (!isPlatformBrowser(platformId)) {\n            this._document = {\n                getElementById: (id: string) => {console.log('getElement by id'); return new HTMLElement();},\n                getElementsByClassName: (className: string) => new HTMLCollection(),\n                getElementsByName: (name: string) => new NodeList(),\n                getElementsByTagName: (name: string) => new NodeList()\n            } as Document;\n        } else {\n            console.log('in browser, assigning document');\n            // this._document = document;\n            this._document = {} as Document;\n        }\n    }\n\n    get nativeDocument(): Document {\n        console.log('get native document');\n        console.log(this._document);\n        return this._document;\n    }\n}\n","import { NgModule, InjectionToken } from '@angular/core';\nimport { WindowService } from './window.service';\nimport { LocalStorageWrapper } from './local-storage-wrapper.service';\nimport { DocumentService } from './document.service';\n\nexport * from './document.service';\n\nexport const WINDOW = new InjectionToken('ng-toolkit-window');\n\nexport function windowFactory(windowService: WindowService) {\n    return windowService.nativeWindow;\n}\n\nexport const LOCAL_STORAGE = new InjectionToken('ng-toolkit-local-storage');\n\nexport function localStorageFactory(localStorageWrapper: LocalStorageWrapper) {\n    return localStorageWrapper.localStorage;\n}\n\nexport const NGT_DOCUMENT = new InjectionToken('ng-toolkit-document');\n\nexport function documentFactory(documentService: DocumentService) {\n    console.log('document factory');\n    return documentService.nativeDocument;\n}\n\n@NgModule({\n    providers: [\n        WindowService,\n        { provide: WINDOW, useFactory: windowFactory, deps: [WindowService] },\n        DocumentService,\n        { provide: NGT_DOCUMENT, useFactory: documentFactory, deps: [DocumentService] },\n        LocalStorageWrapper,\n        { provide: LOCAL_STORAGE, useFactory: localStorageFactory, deps: [LocalStorageWrapper] }\n    ]\n})\nexport class NgtUniversalModule {}\n"],"names":["isPlatformBrowser","Injectable","Inject","PLATFORM_ID","InjectionToken","NgModule"],"mappings":"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"}
